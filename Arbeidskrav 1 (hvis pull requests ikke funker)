#laseter ned nødvendige pakker og datasettet
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import sympy as sp

df=pd.read_csv("https://uit-sok-1006-v23.github.io/data/suits_watermelons.csv",delimiter=";")

-----------------------------------------------------------------------------------------------

### OPPGAVE 7.1.1

#### A)

-----------------------------------------------------------------------------------------------

# lager de nye variablene p, h og q
df["p"] = np.exp(df["log p"])
df["h"] = np.exp(df["log h"])
df["q"] = np.exp(df["log q"])

df

---------------------------------------------------------------------------------------------

#### B)

----------------------------------------------------------------------------------------------

# setter opp plottene
fig, (ax, ax2) = plt.subplots(1,2, sharey = False, figsize=(15,5))

# lager navn til aksene 
ax.set_ylabel('Pris', size = 15)
ax2.set_ylabel('Pris', size = 15)
ax.set_xlabel('År', size = 15)
ax2.set_xlabel('År', size = 15)

# lager plot
ax.plot(df["Year"], df["p"], color = "blue", label = "pris",   marker = "o")
ax2.plot(df["Year"], df["h"], color = "green", label = "innhøsting", marker = "o")
ax2.plot(df["Year"], df["q"], color = "red", label = "avling",    marker = "o", linestyle = "--", alpha = 0.3)

# legend
ax.legend(loc = "upper left")
ax2.legend(loc = "lower right")

------------------------------------------------------------------------------------------------------------------

### OPPGAVE 7.1.2

#### A)

------------------------------------------------------------------------------------------------------------------

# lager tallrekken vi trenger
Q = [20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100]

-------------------------------------------------------------------------------------

# setter tallrekken inn i et dataframe
df2 = pd.DataFrame(Q, columns = ["Q"])

df2

-----------------------------------------------------------------------------------------------------------------

#### B)

-----------------------------------------------------------------------------------------------------------------

# Lager nye kolonner med log av q og supply + demand
df2["Log Q"] = np.log(df2["Q"])

df2["Supply (log P)"] = -2 + 1.7   * df2["Log Q"]
df2["Demand (log P)"] = 8.5 - 0.82 * df2["Log Q"]

df2

---------------------------------------------------------------------------------------------------------------------

#### C)

---------------------------------------------------------------------------------------------------------------

# Lager nye kolonner med priser
df2["Supply (P)"]  = np.exp(df2["Supply (log P)"])
df2["Demand (P)"] = np.exp(df2["Demand (log P)"])

df2

---------------------------------------------------------------------------------------------------------------

### OPPGAVE 7.1.3

#### A)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# setter opp plot
fig2, ax = plt.subplots()

# lager navn til aksene
ax.set_ylabel("Pris (P)")
ax.set_xlabel("Mengde (Q)")

# lager plot
ax.plot(df2["Q"], df2["Supply (P)"], color = "red",  label = "Tilbud")
ax.plot(df2["Q"], df2["Demand (P)"], color = "blue", label = "Etterspørsel")

# setter en tittel 
ax.set_title("Vannmelon, tilbud og etterspørsel")

# legende
ax.legend(loc = "lower right")

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#### B)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Lager ny kolonne med den gitte likningen
df2["New supply (log P)"]  = -2 + 1.7 * df2["Log Q"] + 0.4

# lager ny kolonne for prs på new supply
df2["New supply (P)"]  = np.exp(df2["New supply (log P)"])

df2

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# setter opp plot
fig2, ax = plt.subplots()

# lager navn til aksene
ax.set_ylabel("Pris (P)")
ax.set_xlabel("Mengde (Q)")

# lager plot
ax.plot(df2["Q"], df2["Supply (P)"], color = "red",  label = "Tilbud")
ax.plot(df2["Q"], df2["Demand (P)"], color = "blue", label = "Etterspørsel")
ax.plot(df2["Q"], df2["New supply (P)"], color = "green",  label = "Nytt tilbud")

# setter en tittel 
ax.set_title("Vannmelon, tilbud og etterspørsel")

# legende
ax.legend(loc = "lower right")

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

### OPPGAVE 7.2.1

#### A)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# regner elastisitet av supply

import sympy as sp

# gir symboler 
q, p = sp.symbols('q, p', real=True, positive=True)

# skriver funksjon til supply
def x_d(q):
    return -2+1.7*(sp.log(q))

el = sp.diff(x_d(q), q)*q/p


el

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# ser på tall fra tabellene vi har, finner y verdi for x verdi 50, regner elastisitet
el.subs([(q,50),(p,104.630920)])

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#### B)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# regner elastisitet av demand

import sympy as sp

# gir symboler
q, p = sp.symbols('q, p', real=True, positive=True)

# skriver funksjonen til demand
def x_d(q):
    return 8.5-0.82*(sp.log(q))

d1 = sp.diff(x_d(q), q)*q/p


d1

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# ser på tall fra tabellene vi har, finner y verdi for x verdi 50, regner elastisitet
d1.subs([(q,50),(p,198.768567)])

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

### OPPGAVE 7.2.2

#### Tabellen 7.6 viser oss P (price of watermelons), C (price of cotton), T (price of vegetables), CP (cotton program), WW2 (Second World War), 
som sier noe om hvordan de påvirker tilbudet på vannmelon. For den første, pris på vannmelon, kan man si at hvis prisen til vannmelonen øker vil 
dette ha en effekt på tilbudet til vannmeloner med en positiv effekt på 0.580. Det samme gjelder for de andre koeffisientene der en endring i pris 
på bomull vil gi en negativ effekt på -0.321, en endring i pris på grønnsaker vil gi en negativ effekt på -0.124, en endring i CP altså 
bomullsprogrammet vil gi en positiv effekt på 0.073, en endring i WW2 faktoren vil gi en negativ effekt på -0.360.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

### OPPGAVE 7.2.3

#### Tabellen 7.7 viser oss P (price of watermelons), Y/N (per capita income) og F (railway freight costs). Dette er koeffisienter fra den gitte 
etterspørselsfunksjonen. Vi kan da se hvordan disse faktorene påvirker etterspørselen på vannmelon, der en endring i pris på vannmelon vil gi en 
negativ effekt på -1.125, en endring i inntekt vil gi en positiv effekt på 1.750, en endring i jernbanens kostnader vil gi en negativ effekt på -0.968. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

### OPPGAVE 7.2.4

#### Funksjonene har faktorne WW2 og CP, disse faktorene er eksogene faktorer, dette kommer av at verdien blir bestemt utenfor mens for eksempel 
faktorene P og Q er endogene variabler. Disse variablene går fra 0-1, hvis det viser seg at de er 1 betyr dette at de har en påvirkning på resten av 
funksjonen, men hvis de er null vil det gi ingen utslag. WW2 faktoren sier noe om USA var involvert i krigen eller ikke, CP faktoren sier noe om 
bumulls programmet var i systemet eller ikke.
